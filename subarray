// function maxSubArray(arr) {
//   if (arr.length === 0) {
//     return 0; // Handle empty array case
//   }

//   let currentSum = arr[0];
//   let maxSum = arr[0];

//   for (let i = 1; i < arr.length; i++) {
//     // Check if adding the current element improves the sum or if starting a new subarray is better
//     currentSum = Math.max(arr[i], currentSum + arr[i]);

//     // Update the maximum sum if the current sum is greater
//     maxSum = Math.max(maxSum, currentSum);
//   }

//   return maxSum;
// }

// // Example usage:
// const inputArray = [-2, 1, -3, 4, -1, 2, 1, -5, 4];
// console.log(maxSubArray(inputArray)); // Output: 6


